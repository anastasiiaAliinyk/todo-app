{"version":3,"sources":["api/api.js","TodoApp.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","options","response","body","wrap","_context","prev","next","fetch","concat","sent","ok","Error","json","abrupt","data","stop","_x","_x2","apply","this","arguments","getTodos","then","todos","filter","todo","userId","deleteTodo","todoId","method","TodoApp","addTodo","_useState","useState","_useState2","slicedToArray","query","setQuery","react_default","createElement","onSubmit","event","preventDefault","title","completed","headers","Content-type","JSON","stringify","type","className","value","placeholder","onChange","target","required","TodoItem","deleteItem","setStatus","setNewTitle","checked","setChecked","_useState3","_useState4","editing","setEditing","_useState5","_useState6","setValue","inputEl","useRef","setStatusCompleted","id","catch","classNames","onClick","setTimeout","current","focus","updateTitle","ref","onBlur","TodoList","items","sortedTodosList","sort","previous","map","TodoItem_TodoItem","key","defaultProp","App","setTodos","notCompletedTodosCount","setCount","location","useLocation","pathname","useEffect","filterTodosList","useCallback","filterBy","filteredTodos","useMemo","count","length","toConsumableArray","deleteTodos","TodoApp_TodoApp","TodoList_TodoList","react_router_dom","to","activeClassName","exact","some","completedItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","completedItem","err","return","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3d72375f.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\nexport const BASE_USERID = 1182;\n\nexport const request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`Failed to load data ${url}`);\n  }\n\n  const body = await response.json();\n\n  return body.data || body;\n};\n\nexport const getTodos = () => (\n  request('/todos')\n    .then(todos => todos.filter(todo => todo.userId === BASE_USERID))\n);\n\nexport const saveTodo = todo => request('/todos', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(todo),\n  });\n\nexport const updateCompletedStatus = (todoId, value) => request(`/todos/${todoId}`, {\n  method: 'PATCH',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    completed: value,\n  }),\n});\n\nexport const updateTitle = (todoId, value) => request(`/todos/${todoId}`, {\n  method: 'PATCH',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    title: value,\n  }),\n});\n\nexport const deleteTodo = todoId => request(`/todos/${todoId}`, {method: 'DELETE'});\n\nexport const saveUser = () => (request('/users', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    name: 'Anastasiia',\n    username: 'anastasiia',\n    email: 'al@example.com',\n    phone: 1234567890,\n  }),\n}));\n","import React, { useState } from 'react';\nimport { saveTodo, BASE_USERID } from './api/api';\n\nexport const TodoApp = ({ addTodo }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    saveTodo({\n      \"userId\": BASE_USERID,\n      \"title\": query,\n      \"completed\": false,\n    })\n    .then(addTodo);\n\n    setQuery('');\n  }\n\n  const onChangeHandler = (event) => {\n    setQuery(event.target.value);\n  }\n\n  return (\n      <form onSubmit={onSubmitHandler}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          value={query}\n          placeholder=\"What needs to be done?\"\n          onChange={onChangeHandler}\n          required\n        />\n      </form>\n    )\n};\n","import React, { useState, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport { deleteTodo, updateCompletedStatus, updateTitle } from './api/api';\n\nexport const TodoItem = ({ todo, deleteItem, setStatus, setNewTitle }) => {\n  const [checked, setChecked] = useState(todo.completed);\n  const [editing, setEditing] = useState(false);\n  const [value, setValue] = useState(todo.title);\n\n  const inputEl = useRef(null);\n\n  const onDeleteHandler = (todoId) => {\n  deleteTodo(todoId)\n    .then(todo => deleteItem(todo.id));\n  } \n\n  const setStatusCompleted = (id, event) => {\n    setChecked(event.target.checked);\n    updateCompletedStatus(id, event.target.checked)\n      .catch(() => {\n        setChecked(!event.target.checked);\n      });\n    setStatus(id, event.target.checked);\n  }\n\n  const onEdit = () => {\n    setEditing(true);\n\n    setTimeout(() => {\n      inputEl.current.focus();\n    });\n  }\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    setEditing(false);\n    setValue(todo.title);\n    updateTitle(todo.id, value);\n    setNewTitle(todo.id, value)\n  }\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return (\n    <li\n      className={classNames(\n        { completed: todo.completed, editing },\n      )}\n      \n    >\n    <div className=\"view\">\n      <input \n        type=\"checkbox\" \n        className=\"toggle\" \n        checked={checked}\n        onChange={(event) => setStatusCompleted(todo.id, event)}\n      />\n      <label>{todo.title}</label>\n      <button \n        type=\"button\" \n        className=\"destroy\" \n        onClick={() => onDeleteHandler(todo.id)}\n      />\n      <button \n        type=\"button\" \n        className=\"editInput\"\n        title=\"Edit title\" \n        onClick={onEdit}\n      /> \n    </div>\n    <form onSubmit={onSubmitHandler}>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={value}\n        onChange={onChange}\n        ref={inputEl}\n        onBlur={() => setEditing(false)}\n      />\n    </form>\n  </li>\n  )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ items, deleteItem, setStatus, setNewTitle }) => {\n  const sortedTodosList = items.sort((previous, current) => current.id - previous.id);\n\n  return (\n    <ul className=\"todo-list\">\n      {sortedTodosList.map(todo => (\n       <TodoItem \n        key={todo.id}\n        todo={todo} \n        deleteItem={deleteItem} \n        setStatus={setStatus}\n        setNewTitle={setNewTitle}\n      />\n      ))}\n    </ul>\n  )\n};\n\nTodoList.defaultProp = {\n  completed: false,\n  title: 'No title',\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool,\n      title: PropTypes.string,\n    }),\n  ).isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n","import React, { \n  useCallback, \n  useEffect, \n  useState, \n  useMemo \n} from 'react';\nimport {\n  NavLink,\n  useLocation\n} from \"react-router-dom\";\n\nimport { TodoApp } from './TodoApp';\nimport { TodoList } from './TodoList';\nimport { getTodos, deleteTodo } from './api/api';\n\nfunction App() {\n  const [todos, setTodos] = useState(null);\n  const [notCompletedTodosCount, setCount] =  useState('');\n  const location = useLocation().pathname;\n  \n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const filterTodosList = useCallback((filterBy) => {\n    if (todos === null) {\n      return;\n    }\n\n    switch(filterBy) {\n      case '/completed':\n        return todos.filter(todo => todo.completed);\n      case '/active':\n        return todos.filter(todo => !todo.completed);\n      default:\n       return todos;\n    }\n  }, [todos]);\n \n  const filteredTodos = useMemo(() => {\n    return filterTodosList(location)\n  }, [location, filterTodosList])\n\n  useEffect(() => {\n    if (todos === null) {\n      return;\n    }\n\n    const count = todos.filter(todo => !todo.completed).length;\n    setCount(count);\n  }, [todos])\n\n  const addTodo = useCallback((todo) => {\n    setTodos(todos => [...todos, todo]);\n  }, []);\n\n  const deleteTodos = useCallback((todoId) => {\n    setTodos(todos => todos.filter(todo => todo.id !== todoId));\n  }, []);\n\n  if (todos === null) {\n    return (\n      <div className=\"loading\">Loading...</div>\n    )\n  }\n\n  const setStatus = (todoId, completed) => {\n    setTodos(todos => todos.map((todo) => {\n      if (todo.id === todoId) {\n        todo.completed = completed;\n      }\n      return todo;\n    }))\n  }\n\n  const setNewTitle = (todoId, title) => {\n    setTodos(todos => todos.map((todo) => {\n      if (todo.id === todoId) {\n        todo.title = title;\n      }\n      return todo;\n    }))\n  }\n\n  const clearCompleted = () => {\n    const completedItems = todos.filter(todo => todo.completed);\n\n    for (const completedItem of completedItems) {\n      deleteTodo(completedItem.id);\n    }\n\n    setTodos(todos => todos.filter(todo => !todo.completed));\n  }\n  \n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp addTodo={addTodo} />\n      </header>\n\n      <section className=\"main\">\n        <TodoList \n          items={filteredTodos} \n          deleteItem={deleteTodos} \n          setStatus={setStatus}\n          setNewTitle={setNewTitle}\n        />\n      </section>\n\n      {todos.length > 0  &&\n       <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {notCompletedTodosCount} items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <NavLink \n              to=\"/\"\n              activeClassName=\"selected\"\n              exact\n            >\n              All\n            </NavLink>\n          </li>\n          <li>\n            <NavLink \n              to=\"/active\"\n              activeClassName=\"selected\"\n            >\n              Active\n            </NavLink>\n          </li>\n          <li>\n            <NavLink \n              to=\"/completed\"\n              activeClassName=\"selected\"\n            >\n              Completed\n            </NavLink>\n          </li>\n        </ul>\n\n        {todos.some(todo => todo.completed) && \n          <button \n            type=\"button\" \n            className=\"clear-completed\"\n            onClick={clearCompleted}\n            >\n            Clear completed\n          </button>\n        }\n      </footer>\n    }\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n     <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}